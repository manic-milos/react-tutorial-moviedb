{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","props","image","Text","HeroImage","title","text","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","e","currentTarget","value","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pags","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","console","log","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","total_pages","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","fetchData","useCallback","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a29ed41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background:var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\n\r\nexport const Content = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width:500px){\r\n        width:150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width:500px){\r\n        width:80px;\r\n    }   \r\n`;","import React from \"react\";\r\n\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n      </Link>\r\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${(props) => props.image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position:relative;\r\n    max-width: var(--maxWidth);\r\n    width:100%;\r\n    height:55px;\r\n    background:var(--medGrey);\r\n    margin: 0 auto;\r\n    color:var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left: 15px;\r\n        top:14px;\r\n        width:30px;\r\n    }\r\n\r\n    input{\r\n        font-size:var(--fontBig);\r\n        position:absolute;\r\n        left:0;\r\n        margin:8px 0;\r\n        padding:0 0 0 60px;\r\n        border:0;\r\n        width:95%;\r\n        background:transparent;\r\n        height: 40px;\r\n        color:var(--white);\r\n\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from'prop-types';\r\n\r\n//image\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\n//Styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState('');\r\n  const initial=useRef(true);\r\n\r\n  \r\n\r\n  useEffect(()=>{\r\n    if(initial.current){\r\n        initial.current=false;\r\n        return;\r\n    }  \r\n    const timer= setTimeout(()=>{\r\n          setSearchTerm(state);\r\n      },500);\r\n      return ()=>clearTimeout(timer);\r\n  },[setSearchTerm,state]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt=\"search-icon\" />\r\n        <input \r\n            type=\"text\" \r\n            placeholder=\"Search Movie\"\r\n            onChange={(e)=>setState(e.currentTarget.value)} \r\n            value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes={\r\n  callback:PropTypes.func\r\n};\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n  \r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//Styles\r\nimport { Wrapper, Content } from '../Grid/Grid.styles';\r\n\r\nconst Grid = ({header,children})=>(\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>\r\n            {children}\r\n        </Content>\r\n    </Wrapper>\r\n)\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string\r\n}\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from'prop-types';\r\n\r\n//Styles\r\nimport {Image} from './Thumb.styles';\r\n\r\nconst Thumb =({image,movieId, clickable})=>(\r\n    <div>\r\n        {clickable?(\r\n            <Link to={`/${movieId}`}>\r\n            <Image src={image} alt='movie-thumb' />\r\n            </Link>\r\n        ):\r\n        (<Image src={image} alt='movie-thumb' />)}\r\n    </div>\r\n);\r\n\r\nThumb.propTypes={\r\n    image:PropTypes.string,\r\n    movieId:PropTypes.number,\r\n    clickable:PropTypes.bool\r\n};\r\n\r\nexport default Thumb;","import {Spinner} from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid --var(lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n  @keyframes spin {\r\n      0%{\r\n          transform: rotate(0deg);\r\n      }\r\n      100%{\r\n          transform: rotate(360deg);\r\n      }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n    display:block;\r\n    background: var(--darkGrey);\r\n    width:25%;\r\n    min-width: 200px;\r\n    height:60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border:0;\r\n    font-size:var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: .8;\r\n    }\r\n`;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n  <Wrapper type=\"button\" onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n);\r\n\r\nButton.propTypes={\r\n  text:PropTypes.string,\r\n  callback:PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n\r\n\r\nexport const isPersistedState = (stateName)=>{\r\n  const sessionState=sessionStorage.getItem(stateName);\r\n  return sessionState && JSON.parse(sessionState);\r\n};\r\n\r\n\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\n//API\r\nimport API from \"../API\";\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pags: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n      console.log(movies);\r\n\r\n      setState((prev) => ({\r\n        ...movies,\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  //initial render and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState(\"homeState\");\r\n      if (sessionState) {\r\n        console.log(\"Grabbing from sessionStorage\");\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n    setState(initialState);\r\n    console.log(\"Grabbing from API\");\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  //LoadMore\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n    }\r\n  }, [searchTerm, state]);\r\n  return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","// import React, { useState, useEffect } from \"react\";\r\n//Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n\r\n//Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport Button from \"./Button\";\r\n//Hooks\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    state,\r\n    loading,\r\n    error,\r\n    setSearchTerm,\r\n    searchTerm,\r\n    setIsLoadingMore\r\n  } = useHomeFetch();\r\n\r\n  console.log(state);\r\n\r\n  if(error) return (<div>Something went wrong...</div>)\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && state.results[0] && (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      )}\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n      <Grid header={searchTerm ? \"Search Results\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button text=\"Load More\" callback={()=>setIsLoadingMore(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display:flex;\r\n    width:100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n\r\n    span{\r\n        font-size: var(--fontMed);\r\n        color:var(--white);\r\n        padding-right:10px;\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size:var(--fontSmall);\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Styles\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <span>Home</span>\r\n      </Link>\r\n      <span>|</span>\r\n      <span>{movieTitle}</span>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n  movieTitle: PropTypes.string,\r\n\r\n};\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n  .director{\r\n      margin:0 0 0 40px;\r\n\r\n      p{\r\n          margin:0;\r\n\r\n      }\r\n  }\r\n\r\n  h1{\r\n      @media screen and (max-width : 768px){\r\n          font-size:var(--fontBig);\r\n      }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from'prop-types';\r\n//Components\r\nimport Thumb from \"../Thumb\";\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\n//Image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumb\r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : NoImage\r\n        }\r\n        clickable={false}\r\n        alt=\"movie-thumb\"\r\n      />\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT:</h3>\r\n        <p>{movie.overview}</p>\r\n\r\n        <div className=\"rating-directors\">\r\n          <div>\r\n            <h3>RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n            {movie.directors.map((director) => (\r\n              <p key={director.credit_id}>\r\n                  {director.name}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes={\r\n  movie:PropTypes.object,\r\n  backdrop_path:PropTypes.string\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  .column {\r\n      display:flex;\r\n      align-items:center;\r\n      justify-content: center;\r\n      background: var(--medGrey);\r\n      border-radius:20px;\r\n      margin:0 20px;\r\n      flex:1;\r\n\r\n      :first-child{\r\n          margin-left: 0;\r\n      }\r\n      :last-child{\r\n          margin-right: 0;\r\n      }\r\n    }\r\n    \r\n    @media screen and (max-width:768px){\r\n        display:block;\r\n\r\n        .column{\r\n            margin:20px 0;\r\n            \r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from'prop-types';\r\n\r\nimport {calcTime, convertMoney} from '../../helpers';\r\n\r\nimport {Wrapper, Content} from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar = ({time,budget,revenue})=>(\r\n    <Wrapper>\r\n        <Content>\r\n            <div className=\"column\">\r\n                <p>Running time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Budget: {convertMoney(budget)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Revenue: {convertMoney(revenue)}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nMovieInfoBar.propTypes={\r\n    time:PropTypes.number,\r\n    budget:PropTypes.number,\r\n    revenue:PropTypes.number\r\n};\r\n\r\nexport default MovieInfoBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper=styled.div`\r\n    color:var(--white);\r\n    background:var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align:center;\r\n\r\n\r\n    h3{\r\n        margin: 10px 0 0 0;\r\n\r\n    }\r\n    p{\r\n        margin:5px 0;\r\n    }\r\n    `;\r\n\r\nexport const Image = styled.img`\r\n    display:block;\r\n    width:100%;\r\n    height: 200px;\r\n    object-fit:cover;\r\n    border-radius: 15px;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport { Wrapper, Image } from \"./Actor.styles\";\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n  <Wrapper>\r\n    <Image src={imageUrl} alt=\"actor - thumb\" />\r\n    <h3>{name}</h3>\r\n    <p>{character}</p>\r\n  </Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n//Components\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n//Hook\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n//IMages\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>Something went wrong...</div>;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor\r\n            key={(actor) => actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport API from \"../API\";\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  //moze i unutar useEffect, onda ne mora useCallback\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const movie = await API.fetchMovie(movieId);\r\n      const credits = await API.fetchCredits(movieId);\r\n\r\n      //Get directors only\r\n      const directors = credits.crew.filter(\r\n        (member) => member.job === \"Director\"\r\n      );\r\n\r\n      setState({\r\n        ...movie,\r\n        actors: credits.cast,\r\n        directors,\r\n      });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    //check session\r\n    const sessionState = isPersistedState(movieId);\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchData();\r\n  }, [movieId, fetchData]);\r\n\r\n  //Write to sessionStorage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = ()=><div>Not Found</div>\r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle =createGlobalStyle`\r\n:root{\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem\r\n}\r\n\r\n*{\r\n    box-sizing: border-box;\r\n    font-family: 'Abel',sans-serif;\r\n\r\n}\r\nbody{\r\n    margin:0;\r\n    padding:0;\r\n    h1{\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: var(--white);\r\n    }\r\n    h3{\r\n        font-size:1.1rem;\r\n        font-weight: 600;\r\n    }\r\n    p{\r\n        font-size:1rem;\r\n        color:var(--white);\r\n    }\r\n}\r\n\r\n`;","import React from \"react\";\r\n\r\n//Routing\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n//Components\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Movie from './components/Movie';\r\nimport NotFound from \"./components/NotFound\";\r\n//styles\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Header />\r\n    <Routes>\r\n      <Route path='/' element={<Home />} />\r\n      <Route path='/:movieId' element={<Movie />} />\r\n      <Route path='/*' element={<NotFound />} />\r\n    </Routes>\r\n\r\n    <GlobalStyle />\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}